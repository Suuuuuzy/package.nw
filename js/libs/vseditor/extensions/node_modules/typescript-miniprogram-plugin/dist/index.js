(()=>{"use strict";var t={607:(t,e,s)=>{const i=s(17),o=s(110),r=s(472),n=s(974),a=new Map;t.exports=function(t){const e=t.typescript;return e.getDefaultCompilerOptions=()=>({allowJs:!0,noEmit:!0}),{create(t){const s=new r.FSManager(e),l=t.project.projectService.logger,h=t.languageService,g=t.languageServiceHost;!function(t,e,s){const o=(0,n.normalizePath)(i.join(t.project.getCurrentDirectory(),"tsconfig.json"));if(e.has(o))return;const r=s.readTSConfig(o);null!==r&&e.set(o,{raw:r})}(t,a,s);const p=new o.MiniProgramTypeScriptLanguageService(h,g,l,t,e,s,a);return p.init(),p.setResolveAlias(),h}}}},110:(t,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.MiniProgramTypeScriptLanguageService=void 0;const i=s(17),o=s(974),r="[TypeScript MiniProgarm Plugin]";e.MiniProgramTypeScriptLanguageService=class{constructor(t,e,s,i,o,r,n){this.tsLS=t,this.tsLH=e,this.logger=s,this.info=i,this._ts=o,this.fs=r,this.tsConfigMap=n}init(){this.proxyResolveModuleNames()}getTransformedTSConfigPaths(t){const e=(0,o.normalizePath)(i.dirname(t));let s,r={baseUrl:"",outDir:"",pathsBasePath:"",projectPath:""};if(void 0!==this.tsConfigMap.get(t)?.paths)return this.tsConfigMap.get(t).paths;if(s=this.tsConfigMap.get(t)?.raw?this.tsConfigMap.get(t)?.raw:this.fs.readTSConfig(t),!s)return r;s?.extends&&(r=this.getTransformedTSConfigPaths(s.extends)??r);const n={baseUrl:s.compilerOptions?.baseUrl?(0,o.getAbsolutePath)(s.compilerOptions.baseUrl,e):r.baseUrl?r.baseUrl:e,outDir:s.compilerOptions?.outDir?(0,o.getAbsolutePath)(s.compilerOptions.outDir,e):r.outDir?r.outDir:(0,o.normalizePath)(i.join(e,"dist")),pathsBasePath:s?.compilerOptions?.paths?e:r.pathsBasePath?r.pathsBasePath:e,projectPath:e},a=this.tsConfigMap.get(t)??{};return a.paths=n,this.tsConfigMap.set(t,a),n}setResolveAlias(){const t=(0,o.normalizePath)(this.info.project.getCurrentDirectory()),e=i.join(t,"tsconfig.json"),s=i.join(t,"project.config.json"),n=this.fs.readJSON(s);if(null!==n){const s=i.join(t,n.srcMiniprogramRoot??n.miniprogramRoot??"."),a=i.join(s,"app.json"),l=this.fs.readJSON(a);if(l?.resolveAlias){const i=this.info.project.getCompilerOptions(),n=this.getTransformedTSConfigPaths(e);this.logger.info(`${r} tsConfigPaths: ${JSON.stringify(n,null,2)}`);const a=(0,o.getTSConfigPathsRelativeConfig)(n,t),h=(0,o.transformResolveAliasToPaths)(l.resolveAlias,s,a.baseUrl,this.logger);return this.logger.info(`${r} resolveAlias: ${JSON.stringify(l.resolveAlias,null,2)}`),this.logger.info(`${r} paths: ${JSON.stringify(h,null,2)} realMiniprogramRoot: ${s}, baseUrl: ${a.baseUrl}`),this.info.project.projectService.setCompilerOptionsForInferredProjects({...a,allowJs:!0,paths:{...i.paths??{},...h}},t),this.info.project.setCompilerOptions(Object.assign({},i,{...a,allowJs:!0,paths:{...i.paths??{},...h}})),!0}}return!1}proxyResolveModuleNames(){const t=this.tsLH.resolveModuleNames?.bind(this.tsLH);this.tsLH.resolveModuleNames=(e,s,i,o,n,a)=>{let l=!1;s.includes("node_modules")||(this.logger.info(`${r} moduleNames, ${e.join("|")}`),this.logger.info(`${r} containingFile, ${s}`),this.logger.info(`${r} compilerOptions, ${JSON.stringify(n)}`),this.logger.info(`${r} projectpath, ${this.info.project.getCurrentDirectory()}`),l=this.setResolveAlias(),this.logger.info(`${r} resolveAlias after, ${JSON.stringify(this.info.project.getCompilerOptions())} setAliasSucceed ${l}`));const h=l?this.info.project.getCompilerOptions():n;return t?.(e,s,i,o,h,a)??[void 0]}}}},472:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.FSManager=void 0,e.FSManager=class{constructor(t){this._ts=t,this.sys=t.sys}readFile(t){return this.sys.fileExists(t)?this.sys.readFile(t,"utf8")??"":null}readJSON(t){try{let e=this.readFile(t);return null!==e&&(e=JSON.parse(e)),e}catch(t){return null}}readTSConfig(t){if(t.endsWith(".json")||(t=`${t}.json`),null===this.readFile(t))return null;const e=this._ts.readConfigFile(t,this.sys.readFile);return void 0!==e.error?null:e.config}}},974:(t,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.normalizePath=e.getAbsolutePath=e.getTSConfigPathsRelativeConfig=e.transformResolveAliasToPaths=void 0;const i=s(17);function o(t){return t.replace(/\\/g,"/")}e.transformResolveAliasToPaths=function(t={},e,s,r){const n={};return Object.keys(t).forEach((r=>{const a=t[r];if(function(t,e){return!(!t.endsWith("/*")||!e.endsWith("/*"))||!(!t.endsWith("*")||!e.endsWith("*"))}(r,a)){const t=i.join(e,a),l=o(i.relative(s,t));n[r]=[l]}})),n},e.getTSConfigPathsRelativeConfig=function(t,e){let{baseUrl:s=".",outDir:r="./dist"}=t;return i.isAbsolute(s)||(s=i.join(e,s)),i.isAbsolute(r)||(r=i.join(e,r)),{baseUrl:o(s),outDir:r,pathsBasePath:e,projectPath:e}},e.getAbsolutePath=function(t,e){return i.isAbsolute(t)?t:o(i.join(e,t))},e.normalizePath=o},17:t=>{t.exports=require("path")}},e={},s=function s(i){var o=e[i];if(void 0!==o)return o.exports;var r=e[i]={exports:{}};return t[i](r,r.exports,s),r.exports}(607);module.exports=s})();