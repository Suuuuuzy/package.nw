!function(require, directRequire){
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Builder=void 0;const tslib_1=require("tslib"),index_1=require("./precompiler/index"),fullcompiler_1=require("./fullcompiler"),nativecompiler_1=require("./nativecompiler"),createSummer_1=require("./createSummer"),waitable_1=tslib_1.__importDefault(require("../utils/waitable"));class Builder extends waitable_1.default{constructor(e,i){super(),this.originProject=e,this._options=i}get preCompiler(){return this._preCompiler}get summerCompiler(){return this._summerCompiler}get compiler(){return this._summerCompiler}get fullCompiler(){return this._fullCompiler}get nativeCompiler(){return this._nativeCompiler}async ready(){const e=this.init.bind(this,this._options);await this.wait(e)}async init(e){await this.initCompilers(e)}async initCompilers(e){try{await this.initPreCompiler(e),await this.initCoreCompiler(e),await this.initFullCompiler(e),await this.initNativeCompiler(e)}catch(e){this.makeError(e)}}async initPreCompiler(e){const{targetPlatform:i,targetPlatformDefines:t,devtoolMessagehub:r}=e;this._preCompiler=new index_1.PreCompiler(this.originProject,r),this.precompileProject=await this._preCompiler.getPreCompileProject({targetPlatform:i,targetPlatformDefines:t,runEnv:"main process"})}async initCoreCompiler(e){const{summerCompilerClass:i,projectInfo:t,cachePath:r="",devtoolMessagehub:o}=e;i?(this._summerCompiler=new i(this.precompileProject,r,t,o),await this._summerCompiler.ready()):this._summerCompiler=await(0,createSummer_1.getSummerCompiler)(this.precompileProject)}async initFullCompiler(e){this._fullCompiler=new fullcompiler_1.FullCompiler(this.precompileProject,{summerCompiler:this._summerCompiler,outputDir:e.outputDir})}async initNativeCompiler(e){if("multiPlatform"!==this.originProject.projectArchitecture)return;const{devtoolMessagehub:i}=e;this._nativeCompiler=new nativecompiler_1.NativeCompiler({project:this.precompileProject,devtoolMessagehub:i}),await this._nativeCompiler.ready()}getPreCompileOptions(){var e,i;return{targetPlatform:null===(e=this.precompileProject)||void 0===e?void 0:e.targetPlatform,targetPlatformDefines:null===(i=this.precompileProject)||void 0===i?void 0:i.targetPlatformDefines}}async changePreCompileOptions(e){var i;(null===(i=this.precompileProject)||void 0===i?void 0:i.targetPlatform)!==e.targetPlatform&&(this.precompileProject.updateConditionCompileOptions(e),await new Promise(e=>setTimeout(e,500)))}setLocale(e){this.summerCompiler.setLocale(e)}destroy(){var e;(null===(e=this._summerCompiler)||void 0===e?void 0:e.isSummer)&&this._summerCompiler.destroy()}}exports.Builder=Builder;
}(require("licia/lazyImport")(require), require)