!function(require, directRequire){
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.FullCompiler=exports.checkProjectOKForWeb=void 0;const tslib_1=require("tslib"),path_1=tslib_1.__importDefault(require("path")),fs_extra_1=tslib_1.__importDefault(require("fs-extra")),tools_1=require("../../utils/tools"),getappservice_1=tslib_1.__importDefault(require("./appservice/getappservice")),pageframe_1=tslib_1.__importDefault(require("./pageframe")),appconfig_1=tslib_1.__importDefault(require("./utils/appconfig/appconfig")),filewriter_1=tslib_1.__importDefault(require("./utils/filewriter")),getallwmltohtmlmap_1=tslib_1.__importDefault(require("./getallwmltohtmlmap")),getallrawfiles_1=tslib_1.__importDefault(require("./getallrawfiles")),getsubpackage_1=tslib_1.__importDefault(require("./appservice/getsubpackage")),getsubpackage_2=tslib_1.__importDefault(require("./pageframe/getsubpackage")),app_1=require("./app/app");async function getWXConfig(e,t,r){let p={};try{p=r?await appconfig_1.default.checkDarkmodeAppConfig(e,t):await appconfig_1.default.checkLightAppConfig(e,t),p=appconfig_1.default.DealSubPackages(p)}catch(e){return{success:!1,content:"{}"}}return{success:!0,content:JSON.stringify(p)}}function checkProjectOKForWeb(e){let t=!0;["workers","functionalPages","lazyCodeLoading","serviceProviderTicket","supportedMaterials","embeddedAppIdList","halfPage"].forEach(e=>{});return["useExtendedLib","plugins"].forEach(e=>{}),t}var IMiniappPkgType;exports.checkProjectOKForWeb=checkProjectOKForWeb,function(e){e.Release="Release",e.Debug="Debug",e.HotReload="HotReload"}(IMiniappPkgType||(IMiniappPkgType={}));class FullCompiler{constructor(e,t){this.project=e,this.summerCompiler=t.summerCompiler,this.outputDir=t.outputDir}async compileFull(e={}){var t,r,p,o;let s=(null==e?void 0:e.outputDir)||this.outputDir;checkProjectOKForWeb(this.project)||(null===(t=(0,tools_1.getTerm)())||void 0===t||t.error.red("\nProject is not available for web\n"),process.exit());const i=null===(r=(0,tools_1.getTerm)())||void 0===r?void 0:r.progressBar({width:80,title:"compile miniprogram:",inline:!0,titleSize:40,percent:!0,syncMode:!0});s||(s=path_1.default.join(this.project.projectPath,this.project.miniprogramRoot,`../${path_1.default.basename(this.project.projectPath)}_web`));const a=new filewriter_1.default({projectPath:path_1.default.join(this.project.projectPath,this.project.miniprogramRoot),dist:s}),l=a.dist;null==i||i.update({progress:.1,title:"app-service"});const n=await(0,getappservice_1.default)(this.project,this.summerCompiler);if(!n.success)return null==i||i.update({progress:1,title:"done: compiled app-service error"}),null==i||i.stop(),l;a.writeFile("app/app-service.js",n.content),null==i||i.update({progress:.5,title:"app-service"}),null==i||i.update({progress:.6,title:"page-frame"});const u=await(0,pageframe_1.default)(this.project,this.summerCompiler,{multi:!1});if(!u.success)return null==i||i.update({progress:1,title:"done: compiled page-frame error"}),null==i||i.stop(),l;a.writeFile("app/page-frame.html",u.content),null==i||i.update({progress:.6,title:"page-frame"}),null==i||i.update({progress:.7,title:"app/app-config.json"});const c=await getWXConfig(this.project,this.summerCompiler,!1);if(!c.success)return null==i||i.update({progress:1,title:"done: compile app/app-config.json error"}),null==i||i.stop(),l;a.writeFile("app/app-config.json",c.content),null==i||i.update({progress:.75,title:"app/app-config.json"}),null==i||i.update({progress:.8,title:"app/app-config-darkmode.json"});const g=await getWXConfig(this.project,this.summerCompiler,!0);if(!g.success)return null==i||i.update({progress:1,title:"done: compile app/app-config-darkmode.json error"}),null==i||i.stop(),l;a.writeFile("app/app-config-darkmode.json",g.content),null==i||i.update({progress:.85,title:"app/app-config-darkmode.json"}),null==i||i.update({progress:.9,title:"pages's html"});const m=await(0,getallwmltohtmlmap_1.default)(this.project,this.summerCompiler);if(!m.success)return null==i||i.update({progress:1,title:"done: compile getAllWXMLToHTMLMap error"}),null==i||i.stop(),l;m.content.forEach((e,t)=>{a.writeFile(path_1.default.join("app",t),e)}),null==i||i.update({progress:.95,title:"copy raw files"});const d=await(0,getallrawfiles_1.default)(this.project,this.summerCompiler);return d.success?(d.content.forEach(e=>{a.copyFile(e,"app")}),null==i||i.update({progress:1,title:"done"}),null===(p=(0,tools_1.getTerm)())||void 0===p||p("\n\n"),null===(o=(0,tools_1.getTerm)())||void 0===o||o.column(1),e.genWxapkg,l):(null==i||i.update({progress:1,title:"done: compile getAllRawFilesMap error"}),null==i||i.stop(),l)}async compileMulti(e={}){var t,r,p,o;let s=(null==e?void 0:e.outputDir)||this.outputDir;checkProjectOKForWeb(this.project)||(null===(t=(0,tools_1.getTerm)())||void 0===t||t.error.red("\nProject is not available for web\n"),process.exit()),s||(s=path_1.default.join(this.project.projectPath,this.project.miniprogramRoot,`../${path_1.default.basename(this.project.projectPath)}_web`));const i=null===(r=(0,tools_1.getTerm)())||void 0===r?void 0:r.progressBar({width:80,title:"compile miniprogram:",percent:!0,titleSize:50,inline:!0,syncMode:!0}),a=new filewriter_1.default({projectPath:path_1.default.join(this.project.projectPath,this.project.miniprogramRoot),dist:s}),l=a.dist;null==i||i.update({progress:.1,title:"app-service"});const n=await(0,getappservice_1.default)(this.project,this.summerCompiler);if(!n.success)return null==i||i.update({progress:1,title:"done: compiled app-service error"}),null==i||i.stop(),l;a.writeFile("app/app-service.js",n.content),null==i||i.update({progress:.3,title:"app-service"}),null==i||i.update({progress:.3,title:"page-frame"});const u=await(0,pageframe_1.default)(this.project,this.summerCompiler,{multi:!0});if(!u.success)return null==i||i.update({progress:1,title:"done: compiled page-frame error"}),null==i||i.stop(),l;a.writeFile("app/app-wxss.js",u.content),a.writeFile("app/page-frame.js","var __pageFrameJsStartTime__ = Date.now();"),null==i||i.update({progress:.5,title:"page-frame"}),null==i||i.update({progress:.5,title:"app/app-config.json"});const c=await getWXConfig(this.project,this.summerCompiler,!1);if(!c.success)return null==i||i.update({progress:1,title:"done: compile app/app-config.json error"}),null==i||i.stop(),l;a.writeFile("app/app-config.json",c.content),null==i||i.update({progress:.6,title:"app/app-config.json"}),null==i||i.update({progress:.6,title:"app/app-config-darkmode.json"});const g=await getWXConfig(this.project,this.summerCompiler,!0);if(!g.success)return null==i||i.update({progress:1,title:"done: compile app/app-config-darkmode.json error"}),null==i||i.stop(),l;a.writeFile("app/app-config-darkmode.json",g.content),null==i||i.update({progress:.7,title:"app/app-config-darkmode.json"}),null==i||i.update({progress:.7,title:"subpackages's pages"});const m=await appconfig_1.default.getAppConfig(this.project,this.summerCompiler,!0);if(m.subpackages||m.subPackages){const e=m.subpackages||m.subPackages;for(const t of e){null==i||i.update({progress:.8,title:t.root+" subpackages app-service.js html"});const e=await(0,getsubpackage_1.default)(this.project,this.summerCompiler,t),r=t.root;if(!e.success)return null==i||i.update({progress:1,title:`error! compile subpackages ${t.root}'s app-service.js html.`}),null==i||i.stop(),l;{const t=path_1.default.join("app",r,"app-service.js");a.writeFile(t,e.content)}null==i||i.update({progress:.8,title:`subpackages: ${t.root}'s page-frame.js html`});const p=await(0,getsubpackage_2.default)(this.project,this.summerCompiler,{subpkgConfig:t});if(!p.success)return null==i||i.update({progress:1,title:`error! compile subpackages ${t.root}'s page-frame.js html.`}),null==i||i.stop(),l;{const e=path_1.default.join("app",r,"page-frame.js");a.writeFile(e,p.content)}}}null==i||i.update({progress:.9,title:"pages's html"});const d=await(0,getallwmltohtmlmap_1.default)(this.project,this.summerCompiler);if(!d.success)return null==i||i.update({progress:1,title:"done: compile getAllWXMLToHTMLMap error"}),null==i||i.stop(),l;d.content.forEach((e,t)=>{a.writeFile(path_1.default.join("app",t),e)}),null==i||i.update({progress:.9,title:"copy raw files"});const f=await(0,getallrawfiles_1.default)(this.project,this.summerCompiler);return f.success?(f.content.forEach(e=>{a.copyFile(e,"app")}),null==i||i.update({progress:1,title:"done"}),null===(p=(0,tools_1.getTerm)())||void 0===p||p.column(1),null===(o=(0,tools_1.getTerm)())||void 0===o||o("\n\n"),e.genWxapkg,l):(null==i||i.update({progress:1,title:"done: compile getAllRawFilesMap error"}),null==i||i.stop(),l)}async genSubPkgAppInfo(e,t,r,p,o,s,i){var a;const l=(0,tools_1.getMiniappJson)(this.project.projectPath,this.project.targetPlatform),n=l.icon,u=l.name,c=await this.summerCompiler.getAppJSON(),g=(null===(a=null==c?void 0:c.window)||void 0===a?void 0:a.pageOrientation)||"portrait",m=await(0,app_1.generateSubPkgAppInfoJson)({miniModuleId:e,nickName:u,brandIconURL:n,pageOrientation:g,buildVersion:p,subpkgs:t,contact:o,cpfWxaAttrSyncResponse:s});i&&"string"==typeof i&&(m.devtoolsLocalServerUrl=i),fs_extra_1.default.ensureDirSync(path_1.default.dirname(r)),fs_extra_1.default.writeJSONSync(r,m)}}exports.FullCompiler=FullCompiler;
}(require("licia/lazyImport")(require), require)