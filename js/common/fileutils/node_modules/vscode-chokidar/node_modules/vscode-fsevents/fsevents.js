"use strict";if("darwin"!==process.platform)throw new Error("Module 'fsevents' is not compatible with platform '"+process.platform+"'");var path=require("path"),Native=require("./build/Release/fse"),EventEmitter=require("events").EventEmitter,fs=require("fs"),inherits=require("util").inherits;function FSEvents(e,t){EventEmitter.call(this),Object.defineProperty(this,"_impl",{value:new Native.FSEvents(String(e||""),t),enumerable:!1,writable:!1})}inherits(FSEvents,EventEmitter),proxies(FSEvents,Native.FSEvents),module.exports=watch,module.exports.getInfo=getInfo,module.exports.FSEvents=Native.FSEvents,module.exports.Constants=Native.Constants;var defer=global.setImmediate||process.nextTick;function watch(e){var t=new FSEvents(String(e||""),(function(e,n,a){defer((function(){t.emit("fsevent",e,n,a);var i=getInfo(e,n);i.id=a,"moved"===i.event?fs.stat(i.path,(function(n,a){i.event=n||!a?"moved-out":"moved-in",t.emit("change",e,i),t.emit(i.event,e,i)})):(t.emit("change",e,i),t.emit(i.event,e,i))}))}));return EventEmitter.call(t),t}function proxies(e,t){Object.keys(t.prototype).filter((function(e){return"function"==typeof t.prototype[e]})).forEach((function(t){e.prototype[t]=function(){return this._impl[t].apply(this._impl,arguments),this}}))}function getFileType(e){return Native.Constants.kFSEventStreamEventFlagItemIsFile&e?"file":Native.Constants.kFSEventStreamEventFlagItemIsDir&e?"directory":Native.Constants.kFSEventStreamEventFlagItemIsSymlink&e?"symlink":void 0}function getEventType(e){return Native.Constants.kFSEventStreamEventFlagItemRemoved&e?"deleted":Native.Constants.kFSEventStreamEventFlagItemRenamed&e?"moved":Native.Constants.kFSEventStreamEventFlagItemCreated&e?"created":Native.Constants.kFSEventStreamEventFlagItemModified&e?"modified":Native.Constants.kFSEventStreamEventFlagRootChanged&e?"root-changed":"unknown"}function getFileChanges(e){return{inode:!!(Native.Constants.kFSEventStreamEventFlagItemInodeMetaMod&e),finder:!!(Native.Constants.kFSEventStreamEventFlagItemFinderInfoMod&e),access:!!(Native.Constants.kFSEventStreamEventFlagItemChangeOwner&e),xattrs:!!(Native.Constants.kFSEventStreamEventFlagItemXattrMod&e)}}function getInfo(e,t){return{path:e,event:getEventType(t),type:getFileType(t),changes:getFileChanges(t),flags:t}}